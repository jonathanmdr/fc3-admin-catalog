buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.flywaydb:flyway-mysql:8.5.12")
    }
}

plugins {
    id "java"
    id "application"
    id "org.springframework.boot" version "2.7.0"
    id "io.spring.dependency-management" version "1.0.11.RELEASE"
    id "org.flywaydb.flyway" version "8.5.12"
}

group "org.fullcycle.admin.catalog.infrastructure"
version "1.0-SNAPSHOT"

bootJar {
    archiveFileName = "application.jar"
    destinationDirectory.set(file("${rootProject.buildDir}/libs"))
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation(project(":domain"))
    implementation(project(":application"))

    implementation("io.vavr:vavr:0.10.4")

    implementation("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    implementation("org.springframework.boot:spring-boot-starter-undertow")

    implementation("org.springdoc:springdoc-openapi-webmvc-core:1.6.9")
    implementation("org.springdoc:springdoc-openapi-ui:1.6.9")

    implementation("com.fasterxml.jackson.module:jackson-module-afterburner")

    implementation("org.springframework.boot:spring-boot-starter-data-jpa")
    runtimeOnly("mysql:mysql-connector-java")

    implementation("org.flywaydb:flyway-mysql:8.5.12")

    testImplementation(project(path: ':domain', configuration: 'testClasses'))

    testImplementation("org.springframework.boot:spring-boot-starter-test")
    testImplementation("org.flywaydb:flyway-core")

    testImplementation("org.testcontainers:testcontainers:1.17.2")
    testImplementation("org.testcontainers:mysql:1.17.2")
    testImplementation("org.testcontainers:junit-jupiter:1.17.2")

    testRuntimeOnly("com.h2database:h2")
}

flyway {
    url = System.getenv("FLYWAY_DB") ?: "jdbc:mysql://localhost:3306/admin_catalog_videos"
    user = System.getenv("FLYWAY_USER") ?: "root"
    password = System.getenv("FLYWAY_PASS") ?: "123456"
}

test {
    filter {
        includeTestsMatching("*Test")
        includeTestsMatching("*IT")
    }
    useJUnitPlatform()
}